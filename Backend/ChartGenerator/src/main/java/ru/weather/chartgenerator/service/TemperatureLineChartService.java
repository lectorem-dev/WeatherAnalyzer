package ru.weather.chartgenerator.service;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.w3c.dom.Document;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.awt.Rectangle;
import java.io.StringWriter;
import java.util.List;

@Service
public class TemperatureLineChartService {
    @Autowired
    private JdbcTemplate jdbcTemplate;

    public String generateTemperatureLineChart() {
        // SQL-запрос для выборки данных
        String sql = "SELECT mintemp, maxtemp FROM observations";

        // Получаем данные из БД
        List<WeatherData> weatherDataList = jdbcTemplate.query(sql, (rs, rowNum) -> new WeatherData(
                rs.getDouble("mintemp"), rs.getDouble("maxtemp")
        ));

        // Создание набора данных для графика
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        int i = 1;
        for (WeatherData data : weatherDataList) {
            dataset.addValue(data.getMinTemp(), "Min Temp", "Day " + i);
            dataset.addValue(data.getMaxTemp(), "Max Temp", "Day " + i);
            i++;
        }

        // Создаем график
        JFreeChart chart = ChartFactory.createLineChart(
                "Temperature Graph", "Days", "Temperature (°C)",
                dataset, PlotOrientation.VERTICAL, true, true, false
        );

        try {
            // Создаем XML-документ
            DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
            Document document = builder.newDocument();

            // Настраиваем контекст генератора SVG
            SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(document);
            ctx.setComment("Generated by JFreeChart and Apache Batik");

            // Создаем SVG-графику
            SVGGraphics2D svgGraphics = new SVGGraphics2D(ctx, false);
            chart.draw(svgGraphics, new Rectangle(800, 600));

            // Сериализуем SVG в строку
            StringWriter writer = new StringWriter();
            svgGraphics.stream(writer, true);  // true — для компактного SVG
            return writer.toString();

        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    // Вспомогательный класс для данных
    public static class WeatherData {
        private Double minTemp;
        private Double maxTemp;

        public WeatherData(Double minTemp, Double maxTemp) {
            this.minTemp = minTemp;
            this.maxTemp = maxTemp;
        }

        public Double getMinTemp() {
            return minTemp;
        }

        public Double getMaxTemp() {
            return maxTemp;
        }
    }
}
